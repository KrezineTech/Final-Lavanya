generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
  users_groups           users_groups[]

  @@index([name], map: "auth_group_name_a6ea08ec_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_permission {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @db.VarChar(255)
  content_type_id        Int
  codename               String                   @db.VarChar(100)
  auth_group_permissions auth_group_permissions[]
  django_content_type    django_content_type      @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")
  users_user_permissions users_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model categories {
  id                  BigInt                @id @default(autoincrement())
  name                String                @db.VarChar(200)
  slug                String                @unique @db.VarChar(200)
  description         String
  image               String?               @db.VarChar(100)
  is_active           Boolean
  sort_order          Int
  created_at          DateTime              @db.Timestamptz(6)
  updated_at          DateTime              @db.Timestamptz(6)
  parent_id           BigInt?
  type                String                @db.VarChar(20)
  categories          categories?           @relation("categoriesTocategories", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "categories_parent_id_fc02df82_fk_categories_id")
  other_categories    categories[]          @relation("categoriesTocategories")
  products_categories products_categories[]

  @@index([parent_id], map: "categories_parent_id_fc02df82")
  @@index([slug], map: "categories_slug_9bedfe6b_like")
}

model collections {
  id                   BigInt                 @id @default(autoincrement())
  name                 String                 @db.VarChar(200)
  slug                 String                 @unique @db.VarChar(200)
  description          String
  image                String?                @db.VarChar(100)
  is_active            Boolean
  sort_order           Int
  created_at           DateTime               @db.Timestamptz(6)
  updated_at           DateTime               @db.Timestamptz(6)
  type                 String                 @db.VarChar(20)
  products_collections products_collections[]

  @@index([slug], map: "collections_slug_070b0ee3_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model customer_addresses {
  id            BigInt    @id @default(autoincrement())
  address_type  String    @db.VarChar(20)
  first_name    String    @db.VarChar(100)
  last_name     String    @db.VarChar(100)
  company       String    @db.VarChar(100)
  address_line1 String    @db.VarChar(255)
  address_line2 String    @db.VarChar(255)
  city          String    @db.VarChar(100)
  state         String    @db.VarChar(100)
  postal_code   String    @db.VarChar(20)
  country       String    @db.VarChar(100)
  phone         String    @db.VarChar(20)
  is_default    Boolean
  created_at    DateTime  @db.Timestamptz(6)
  updated_at    DateTime  @db.Timestamptz(6)
  customer_id   BigInt
  customers     customers @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "customer_addresses_customer_id_54520d4e_fk_customers_id")

  @@index([customer_id], map: "customer_addresses_customer_id_54520d4e")
}

model customer_segments {
  id                          BigInt                        @id @default(autoincrement())
  name                        String                        @db.VarChar(255)
  description                 String
  criteria                    Json
  created_at                  DateTime                      @db.Timestamptz(6)
  updated_at                  DateTime                      @db.Timestamptz(6)
  customer_segments_customers customer_segments_customers[]
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model customer_segments_customers {
  id                 BigInt            @id @default(autoincrement())
  customersegment_id BigInt
  customer_id        BigInt
  customers          customers         @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "customer_segments_cu_customer_id_643542e5_fk_customers")
  customer_segments  customer_segments @relation(fields: [customersegment_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "customer_segments_cu_customersegment_id_c3417016_fk_customer_")

  @@unique([customersegment_id, customer_id], map: "customer_segments_custom_customersegment_id_custo_ff8c8add_uniq")
  @@index([customer_id], map: "customer_segments_customers_customer_id_643542e5")
  @@index([customersegment_id], map: "customer_segments_customers_customersegment_id_c3417016")
}

model customers {
  id                          BigInt                        @id @default(autoincrement())
  first_name                  String                        @db.VarChar(100)
  last_name                   String                        @db.VarChar(100)
  email                       String                        @unique @db.VarChar(254)
  phone                       String                        @db.VarChar(20)
  password_hash               String                        @db.VarChar(255)
  email_verified              Boolean
  is_active                   Boolean
  accepts_marketing           Boolean
  tags                        Json
  total_spent                 Decimal                       @db.Decimal(10, 2)
  total_orders                Int
  notes                       String
  created_at                  DateTime                      @db.Timestamptz(6)
  updated_at                  DateTime                      @db.Timestamptz(6)
  last_order_date             DateTime?                     @db.Timestamptz(6)
  customer_addresses          customer_addresses[]
  customer_segments_customers customer_segments_customers[]
  orders                      orders[]

  @@index([email], map: "customers_email_92e882_idx")
  @@index([email], map: "customers_email_af8f39bb_like")
  @@index([last_name, first_name], map: "customers_last_na_89bb5f_idx")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.Timestamptz(6)
  object_id           String?
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.SmallInt
  change_message      String
  content_type_id     Int?
  user_id             BigInt
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  users               users                @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "django_admin_log_user_id_c564eba6_fk_users_id")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.Timestamptz(6)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String
  expire_date  DateTime @db.Timestamptz(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
  @@index([session_key], map: "django_session_session_key_c0390e0f_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model login_history {
  id         BigInt   @id @default(autoincrement())
  ip_address String   @db.Inet
  user_agent String
  login_time DateTime @db.Timestamptz(6)
  success    Boolean
  user_id    BigInt
  users      users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "login_history_user_id_0eeaebb8_fk_users_id")

  @@index([user_id], map: "login_history_user_id_0eeaebb8")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model media_media {
  id             BigInt   @id @default(autoincrement())
  file           String   @db.VarChar(500)
  media_type     String   @db.VarChar(10)
  title          String   @db.VarChar(255)
  alt_text       String   @db.VarChar(255)
  file_size      Int?
  width          Int?
  height         Int?
  product_id     Int?
  uploaded_at    DateTime @db.Timestamptz(6)
  updated_at     DateTime @db.Timestamptz(6)
  uploaded_by_id BigInt?
  users          users?   @relation(fields: [uploaded_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "media_media_uploaded_by_id_2e55dbaf_fk_users_id")

  @@index([uploaded_by_id], map: "media_media_uploaded_by_id_2e55dbaf")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model order_items {
  id                 BigInt            @id @default(autoincrement())
  product_title      String            @db.VarChar(255)
  variant_title      String            @db.VarChar(255)
  sku                String            @db.VarChar(100)
  quantity           Int
  unit_price         Decimal           @db.Decimal(10, 2)
  line_total         Decimal           @db.Decimal(10, 2)
  quantity_fulfilled Int
  order_id           BigInt
  product_id         BigInt?
  variant_id         BigInt?
  orders             orders            @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_items_order_id_412ad78b_fk_orders_id")
  products           products?         @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_items_product_id_dd557d5a_fk_products_id")
  product_variants   product_variants? @relation(fields: [variant_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_items_variant_id_c29d5590_fk_product_variants_id")

  @@index([order_id], map: "order_items_order_id_412ad78b")
  @@index([product_id], map: "order_items_product_id_dd557d5a")
  @@index([variant_id], map: "order_items_variant_id_c29d5590")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model order_status_history {
  id            BigInt   @id @default(autoincrement())
  from_status   String   @db.VarChar(20)
  to_status     String   @db.VarChar(20)
  note          String
  created_at    DateTime @db.Timestamptz(6)
  created_by_id BigInt?
  order_id      BigInt
  users         users?   @relation(fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_status_history_created_by_id_d76de8bb_fk_users_id")
  orders        orders   @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_status_history_order_id_d33fdfde_fk_orders_id")

  @@index([created_by_id], map: "order_status_history_created_by_id_d76de8bb")
  @@index([order_id], map: "order_status_history_order_id_d33fdfde")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model orders {
  id                     BigInt                 @id @default(autoincrement())
  order_number           String                 @unique @db.VarChar(50)
  customer_email         String                 @db.VarChar(254)
  status                 String                 @db.VarChar(20)
  payment_status         String                 @db.VarChar(20)
  fulfillment_status     String                 @db.VarChar(30)
  subtotal               Decimal                @db.Decimal(10, 2)
  shipping_cost          Decimal                @db.Decimal(10, 2)
  tax                    Decimal                @db.Decimal(10, 2)
  discount               Decimal                @db.Decimal(10, 2)
  total                  Decimal                @db.Decimal(10, 2)
  shipping_address_line1 String                 @db.VarChar(255)
  shipping_address_line2 String                 @db.VarChar(255)
  shipping_city          String                 @db.VarChar(100)
  shipping_state         String                 @db.VarChar(100)
  shipping_postal_code   String                 @db.VarChar(20)
  shipping_country       String                 @db.VarChar(100)
  shipping_phone         String                 @db.VarChar(20)
  billing_address_line1  String                 @db.VarChar(255)
  billing_address_line2  String                 @db.VarChar(255)
  billing_city           String                 @db.VarChar(100)
  billing_state          String                 @db.VarChar(100)
  billing_postal_code    String                 @db.VarChar(20)
  billing_country        String                 @db.VarChar(100)
  notes                  String
  internal_notes         String
  tracking_number        String                 @db.VarChar(100)
  created_at             DateTime               @db.Timestamptz(6)
  updated_at             DateTime               @db.Timestamptz(6)
  confirmed_at           DateTime?              @db.Timestamptz(6)
  shipped_at             DateTime?              @db.Timestamptz(6)
  delivered_at           DateTime?              @db.Timestamptz(6)
  customer_id            BigInt?
  order_items            order_items[]
  order_status_history   order_status_history[]
  customers              customers?             @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_customer_id_b7016332_fk_customers_id")

  @@index([customer_email], map: "orders_custome_cf1fac_idx")
  @@index([customer_id], map: "orders_customer_id_b7016332")
  @@index([order_number], map: "orders_order_n_1336be_idx")
  @@index([order_number], map: "orders_order_number_fdca857f_like")
  @@index([status, created_at], map: "orders_status_11db6c_idx")
}

model permissions {
  id               BigInt             @id @default(autoincrement())
  name             String             @unique @db.VarChar(255)
  codename         String             @unique @db.VarChar(100)
  category         String             @db.VarChar(50)
  description      String
  user_permissions user_permissions[]

  @@index([codename], map: "permissions_codename_9117b1ae_like")
  @@index([name], map: "permissions_name_78c1eaba_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model product_media {
  id               BigInt            @id @default(autoincrement())
  media_type       String            @db.VarChar(20)
  file             String            @db.VarChar(100)
  alt_text         String            @db.VarChar(255)
  position         Int
  created_at       DateTime          @db.Timestamptz(6)
  product_id       BigInt
  variant_id       BigInt?
  products         products          @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_media_product_id_da264f78_fk_products_id")
  product_variants product_variants? @relation(fields: [variant_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_media_variant_id_8baea7d0_fk_product_variants_id")

  @@index([product_id], map: "product_media_product_id_da264f78")
  @@index([variant_id], map: "product_media_variant_id_8baea7d0")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model product_reviews {
  id             BigInt   @id @default(autoincrement())
  customer_name  String   @db.VarChar(255)
  customer_email String   @db.VarChar(254)
  rating         Int
  comment        String
  is_verified    Boolean
  is_approved    Boolean
  created_at     DateTime @db.Timestamptz(6)
  product_id     BigInt
  products       products @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_reviews_product_id_9059f243_fk_products_id")

  @@index([product_id], map: "product_reviews_product_id_9059f243")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model product_variants {
  id               BigInt          @id @default(autoincrement())
  option1_name     String          @db.VarChar(50)
  option1_value    String          @db.VarChar(100)
  option2_name     String          @db.VarChar(50)
  option2_value    String          @db.VarChar(100)
  option3_name     String          @db.VarChar(50)
  option3_value    String
  price            Decimal?        @db.Decimal(10, 2)
  compare_at_price Decimal?        @db.Decimal(10, 2)
  sku              String          @unique @db.VarChar(100)
  barcode          String?         @db.VarChar(100)
  quantity         Int
  weight           Decimal?        @db.Decimal(8, 2)
  is_active        Boolean
  created_at       DateTime        @db.Timestamptz(6)
  updated_at       DateTime        @db.Timestamptz(6)
  product_id       BigInt
  order_items      order_items[]
  product_media    product_media[]
  products         products        @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "product_variants_product_id_019d9f04_fk_products_id")

  @@index([product_id], map: "product_variants_product_id_019d9f04")
  @@index([sku], map: "product_variants_sku_10738fd7_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model products {
  id                   BigInt                 @id @default(autoincrement())
  title                String                 @db.VarChar(255)
  slug                 String                 @unique @db.VarChar(255)
  description          String
  status               String                 @db.VarChar(20)
  price                Decimal                @db.Decimal(10, 2)
  compare_at_price     Decimal?               @db.Decimal(10, 2)
  cost_per_item        Decimal?               @db.Decimal(10, 2)
  sku                  String                 @unique @db.VarChar(100)
  barcode              String?                @db.VarChar(100)
  track_quantity       Boolean
  quantity             Int
  low_stock_threshold  Int
  metal_type           String                 @db.VarChar(50)
  metal_purity         String                 @db.VarChar(50)
  carat_weight         Decimal?               @db.Decimal(6, 2)
  diamond_clarity      String                 @db.VarChar(50)
  diamond_color        String                 @db.VarChar(50)
  gemstone_type        String                 @db.VarChar(100)
  certification        String                 @db.VarChar(100)
  meta_title           String                 @db.VarChar(255)
  meta_description     String
  is_featured          Boolean
  is_bestseller        Boolean
  is_new_arrival       Boolean
  has_variants         Boolean
  created_at           DateTime               @db.Timestamptz(6)
  updated_at           DateTime               @db.Timestamptz(6)
  created_by_id        BigInt?
  cut                  String                 @db.VarChar(100)
  product_type         String                 @db.VarChar(100)
  ring_sizes           Json
  tags                 Json
  total_diamonds       Int?
  order_items          order_items[]
  product_media        product_media[]
  product_reviews      product_reviews[]
  product_variants     product_variants[]
  users                users?                 @relation(fields: [created_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "products_created_by_id_924ff91a_fk_users_id")
  products_categories  products_categories[]
  products_collections products_collections[]

  @@index([created_by_id], map: "products_created_by_id_924ff91a")
  @@index([sku], map: "products_sku_81b9e9fe_like")
  @@index([sku], map: "products_sku_fe2039_idx")
  @@index([slug], map: "products_slug_5e91f2_idx")
  @@index([slug], map: "products_slug_8f20884e_like")
  @@index([status, created_at], map: "products_status_678497_idx")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model products_categories {
  id          BigInt     @id @default(autoincrement())
  product_id  BigInt
  category_id BigInt
  categories  categories @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "products_categories_category_id_a3d618ca_fk_categories_id")
  products    products   @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "products_categories_product_id_14cbb9b0_fk_products_id")

  @@unique([product_id, category_id], map: "products_categories_product_id_category_id_1475aa05_uniq")
  @@index([category_id], map: "products_categories_category_id_a3d618ca")
  @@index([product_id], map: "products_categories_product_id_14cbb9b0")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model products_collections {
  id            BigInt      @id @default(autoincrement())
  product_id    BigInt
  collection_id BigInt
  collections   collections @relation(fields: [collection_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "products_collections_collection_id_9c7ebf26_fk_collections_id")
  products      products    @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "products_collections_product_id_c5363952_fk_products_id")

  @@unique([product_id, collection_id], map: "products_collections_product_id_collection_id_b38eb450_uniq")
  @@index([collection_id], map: "products_collections_collection_id_9c7ebf26")
  @@index([product_id], map: "products_collections_product_id_c5363952")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model user_permissions {
  id                                          BigInt      @id @default(autoincrement())
  granted_at                                  DateTime    @db.Timestamptz(6)
  granted_by_id                               BigInt?
  permission_id                               BigInt
  user_id                                     BigInt
  users_user_permissions_granted_by_idTousers users?      @relation("user_permissions_granted_by_idTousers", fields: [granted_by_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_permissions_granted_by_id_af71892d_fk_users_id")
  permissions                                 permissions @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_permissions_permission_id_c566ae5c_fk_permissions_id")
  users_user_permissions_user_idTousers       users       @relation("user_permissions_user_idTousers", fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_permissions_user_id_b176ff97_fk_users_id")

  @@unique([user_id, permission_id], map: "user_permissions_user_id_permission_id_11a83645_uniq")
  @@index([granted_by_id], map: "user_permissions_granted_by_id_af71892d")
  @@index([permission_id], map: "user_permissions_permission_id_c566ae5c")
  @@index([user_id], map: "user_permissions_user_id_b176ff97")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model user_sessions {
  id            BigInt   @id @default(autoincrement())
  session_key   String   @unique @db.VarChar(40)
  ip_address    String   @db.Inet
  user_agent    String
  created_at    DateTime @db.Timestamptz(6)
  last_activity DateTime @db.Timestamptz(6)
  is_active     Boolean
  user_id       BigInt
  users         users    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_sessions_user_id_43ce9642_fk_users_id")

  @@index([session_key], map: "user_sessions_session_key_5c5616a8_like")
  @@index([user_id], map: "user_sessions_user_id_43ce9642")
}

model users {
  id                                                     BigInt                   @id @default(autoincrement())
  password                                               String                   @db.VarChar(128)
  last_login                                             DateTime?                @db.Timestamptz(6)
  is_superuser                                           Boolean
  username                                               String                   @unique @db.VarChar(150)
  first_name                                             String                   @db.VarChar(150)
  last_name                                              String                   @db.VarChar(150)
  email                                                  String                   @db.VarChar(254)
  is_staff                                               Boolean
  is_active                                              Boolean
  date_joined                                            DateTime                 @db.Timestamptz(6)
  role                                                   String                   @db.VarChar(20)
  phone                                                  String?                  @db.VarChar(20)
  avatar                                                 String?                  @db.VarChar(100)
  bio                                                    String?
  is_active_user                                         Boolean
  last_login_ip                                          String?                  @db.Inet
  failed_login_attempts                                  Int
  account_locked_until                                   DateTime?                @db.Timestamptz(6)
  two_factor_enabled                                     Boolean
  two_factor_secret                                      String?                  @db.VarChar(32)
  created_at                                             DateTime                 @db.Timestamptz(6)
  updated_at                                             DateTime                 @db.Timestamptz(6)
  django_admin_log                                       django_admin_log[]
  login_history                                          login_history[]
  media_media                                            media_media[]
  order_status_history                                   order_status_history[]
  products                                               products[]
  user_permissions_user_permissions_granted_by_idTousers user_permissions[]       @relation("user_permissions_granted_by_idTousers")
  user_permissions_user_permissions_user_idTousers       user_permissions[]       @relation("user_permissions_user_idTousers")
  user_sessions                                          user_sessions[]
  users_groups                                           users_groups[]
  users_user_permissions                                 users_user_permissions[]

  @@index([username], map: "users_username_e8658fc8_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model users_groups {
  id         BigInt     @id @default(autoincrement())
  user_id    BigInt
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_groups_group_id_2f3517aa_fk_auth_group_id")
  users      users      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_groups_user_id_f500bee5_fk_users_id")

  @@unique([user_id, group_id], map: "users_groups_user_id_group_id_fc7788e8_uniq")
  @@index([group_id], map: "users_groups_group_id_2f3517aa")
  @@index([user_id], map: "users_groups_user_id_f500bee5")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model users_user_permissions {
  id              BigInt          @id @default(autoincrement())
  user_id         BigInt
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_user_permissio_permission_id_6d08dcd2_fk_auth_perm")
  users           users           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "users_user_permissions_user_id_92473840_fk_users_id")

  @@unique([user_id, permission_id], map: "users_user_permissions_user_id_permission_id_3b86cbdf_uniq")
  @@index([permission_id], map: "users_user_permissions_permission_id_6d08dcd2")
  @@index([user_id], map: "users_user_permissions_user_id_92473840")
}
